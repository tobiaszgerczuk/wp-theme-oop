{"version":3,"file":"css/blocks/submenu.css","mappings":"AAkEA,MAEE,kBClEF,CACA,SAIE,YAHA,UACA,gBACA,MAEA,SAEF,CC6EI,0BDpFJ,SASI,8BACA,aAFA,cAKF,CACF,CADE,oBAEE,yDADA,qDACA,mDAGJ,CC8EI,0BDnFF,oBAII,mBAKJ,CACF,CC6DI,0BDvEF,oBAOI,wGAOJ,CACF,CALI,0BAEE,yDADA,qDACA,oDAEA,gBADA,gBAGA,kBADA,oFAEA,UAON,CC+CI,0BD7DA,0BAUI,+CACA,2DADA,mBAIA,uBAHA,8CAEA,YADA,iBAHA,kBAMA,WASN,CACF,CARM,mCAQE,8BAJA,eAHA,eACA,gBACA,iBAIA,qCAFA,kBACA,qEAYR,CC0BI,0BD5CE,mCAUI,YAYR,CACF,CAXQ,yCACE,oCAaV,CAXQ,yCAQE,+CAEA,4BADA,wBARA,WACA,cAEA,WACA,kBACA,8BACA,oBAIA,sEARA,UAqBV,CCKI,0BD7BI,yCAaI,OAeV,CACF,CAZM,gCAME,8BAJA,0CAEA,eADA,gBAEA,iBAEA,qCANA,oBAoBR,CCTI,0BDZE,gCAWI,iBAFA,eACA,iBAEA,aAgBR,CAdM,iDAEI,iBAiBV,CAJF,CAVQ,0CACE,oCAiBV,CAbM,kCACE,iBAeR,CAdQ,uDACE,yDAgBV,CAXI,6BAQE,yDACA,qEALA,qCAFA,SAKA,qDACA,oDALA,OAGA,aALA,eAIA,UAiBN,CC1CI,0BDoBA,6BAWI,wBAKA,2DACA,+DANA,oBAKA,8CAJA,iBAGA,cAFA,kBACA,WAkBN,CACF,CAbQ,oDACE,UAeV,CCxDI,0BDwCI,oDAGI,WAiBV,CACF,CAhBU,qEACE,iBAkBZ,CChEI,0BD6CM,qEAGI,gBAoBZ,CACF,C","sources":["webpack://custom-theme/./assets/scss/_variables.scss","webpack://custom-theme/./assets/scss/blocks/submenu.scss","webpack://custom-theme/./assets/scss/_mixins.scss"],"sourcesContent":["@import 'mixins';\r\n\r\n// =============================================================================\r\n// 1. Global\r\n// 2. Grid breakpoints\r\n// 3. Container max-width sizes\r\n// 4. Responsive Fonts\r\n// 5. Root variables\r\n// =============================================================================\r\n//\r\n// 1. Global\r\n// =============================================================================\r\n//\r\n// Choose whether to use bootstrap grid e.g. container, row, col etc.\r\n$use-bootstrap-grid: true;\r\n\r\n// If you want use rem to px function define this in pixels exclude 'px'\r\n$base-font-size: 18;\r\n\r\n// Default transitions variables\r\n$default-transition-duration: 0.15s;\r\n$default-transition-timing: ease-in-out;\r\n\r\n// Grid\r\n$grid-gutter-width: 2rem;\r\n\r\n// 2. Grid breakpoints\r\n// =============================================================================\r\n$grid-breakpoints: (\r\n  // Start\r\n  xxs: 0,\r\n  // Phone\r\n  xs: 375px,\r\n  // Phone\r\n  sm: 576px,\r\n  // Tablet\r\n  md: 1024px,\r\n  // Tablet\r\n  lg: 1024px,\r\n  // Desktop\r\n  xl: 1200px,\r\n  // Desktop\r\n  xxl: 1440px,\r\n  // Desktop\r\n  3xl: 1920px,\r\n  // Large desktop\r\n  4xl: 2560px\r\n);\r\n\r\n// 3. Container max-width sizes\r\n// =============================================================================\r\n$container-max-widths: (\r\n  md: 100%,\r\n  xl: 816px\r\n);\r\n\r\n// 4. Responsive Fonts\r\n// =============================================================================\r\n$min_width: map-get($grid-breakpoints, \"xs\"); // min width responsive range\r\n$max_width: map-get($grid-breakpoints, \"xl\"); // max width responsive range\r\n$min_font: 12px; // min font size for responsive range\r\n$max_font: 16px; // max font size for responsive range\r\n//\r\n//\r\n// 5. Root variables\r\n// =============================================================================\r\n:root {\r\n // Place variables here like --primary: #292929;\r\n  --bs-gutter-x: 24px;\r\n}\r\n\r\n","@import \"../variables\";\r\n@import \"../mixins\";\r\n\r\n.submenu {\r\n  padding: 0;\r\n  position: sticky;\r\n  top: 0;\r\n  height: 72px;\r\n  z-index: 2;\r\n\r\n  @include media-breakpoint-up(lg) {\r\n    padding: 12px 0 12px 0;\r\n    background: rgba( white, .9 );\r\n    height: unset;\r\n  }\r\n\r\n  &__container {\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    @include media-breakpoint-down(lg) {\r\n      padding: 0!important;\r\n    }\r\n    @include media-breakpoint-up(lg) {\r\n      flex-flow: row nowrap;\r\n    }\r\n\r\n    .menu {\r\n      display: flex;\r\n      flex-flow: column nowrap;\r\n      overflow: hidden;\r\n      max-height: 72px;\r\n      transition: max-height .3s ease-in-out;\r\n      position: absolute;\r\n      width: 100%;\r\n      @include media-breakpoint-up(lg) {\r\n        position: relative;\r\n        align-items: center;\r\n        flex-flow: row nowrap;\r\n        max-height: unset;\r\n        height: 58px;\r\n        background: transparent;\r\n        width: unset;\r\n      }\r\n      &__trigger {\r\n        font-size: 17px;\r\n        font-weight: 600;\r\n        line-height: 24px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        transition: all .3s ease-in-out;\r\n        padding: 24px var(--bs-gutter-x, 1rem);\r\n        background: rgba( white, .9 );\r\n        @include media-breakpoint-up(lg) {\r\n          display: none;\r\n        }\r\n        &:hover {\r\n          color: var( --wp--preset--color--text );\r\n        }\r\n        &:after {\r\n          content: '';\r\n          display: block;\r\n          width: 10px;\r\n          height: 8px;\r\n          position: absolute;\r\n          right: var(--bs-gutter-x, 1rem);\r\n          top: calc(50% - 5px);\r\n          background-image: url(\"../../svg/arrow_menu.svg\");\r\n          background-size: contain;\r\n          background-repeat: no-repeat;\r\n          transition: all .3s ease-in-out;\r\n          @include media-breakpoint-up(lg) {\r\n            right: 0;\r\n          }\r\n        }\r\n      }\r\n      &__item {\r\n        text-decoration: none;\r\n        color: var( --wp--preset--color--text-gray );\r\n        font-weight: 600;\r\n        font-size: 16px;\r\n        line-height: 22px;\r\n        background: rgba( white, .9 );\r\n        padding: 10px var(--bs-gutter-x, 1rem);\r\n        @include media-breakpoint-up(lg) {\r\n          font-size: 17px;\r\n          line-height: 24px;\r\n          background: unset;\r\n          padding: 7px 0;\r\n        }\r\n        &:not(:last-child) {\r\n          @include media-breakpoint-up(lg) {\r\n            margin-right: 30px;\r\n          }\r\n        }\r\n        &.is-active {\r\n          color: var( --wp--preset--color--text );\r\n        }\r\n      }\r\n\r\n      &.is-open {\r\n        max-height: 1000px;\r\n        .menu__trigger:after {\r\n          transform: rotate(180deg);\r\n        }\r\n      }\r\n    }\r\n\r\n    .buttons {\r\n      position: fixed;\r\n      bottom: 0;\r\n      left: 0;\r\n      background-color: rgba( white, .95 );\r\n      width: 100%;\r\n      padding: 24px;\r\n      display: flex;\r\n      flex-flow: column nowrap;\r\n      align-items: stretch;\r\n      @include media-breakpoint-up(lg) {\r\n        align-self: flex-end;\r\n        margin-left: auto;\r\n        position: relative;\r\n        width: unset;\r\n        padding: unset;\r\n        flex-flow: row nowrap;\r\n        align-items: unset;\r\n      }\r\n      .wp-block-button {\r\n        &__link {\r\n          width: 100%;\r\n          @include media-breakpoint-up(lg) {\r\n            width: unset;\r\n          }\r\n          &:not(:last-child) {\r\n            margin-bottom: 2px;\r\n            @include media-breakpoint-up(lg) {\r\n              margin-right: 2px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","// =============================================================================\r\n// 1. Disable user selection\r\n// 2. Color\r\n// 3. Truncate single line text\r\n// 4. Truncate multi line text\r\n// 5. PX to REM\r\n// 6. Aspect ratio\r\n// 7. Row\r\n// 8. Custom media queries up\r\n// 9. Custom media queries down\r\n// 10. Custom media queries between\r\n// 11. Custom transitions\r\n// 12. Responsive\r\n// =============================================================================\r\n\r\n// 1. Disable user selection\r\n// =============================================================================\r\n@mixin nonselect {\r\n  user-select: none;\r\n}\r\n\r\n// 2. Color\r\n// =============================================================================\r\n@function color($name: 'text',$scheme: 'light', $opacity: 1) {\r\n  $color-schemes: map-get($colors, $scheme);\r\n  $color: map-get($color-schemes, $name);\r\n\r\n  @return rgba($color, $opacity);\r\n}\r\n\r\n// 3. Truncate single line text\r\n// =============================================================================\r\n@mixin truncateText($overflow: ellipsis) {\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: $overflow; // values are: clip, ellipsis, or a string\r\n}\r\n\r\n// 4. Truncate multi line text\r\n// =============================================================================\r\n@mixin truncateLines($lines) {\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: $lines;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n// 5. PX to REM\r\n// =============================================================================\r\n@function rem($size) {\r\n  $remSize: calc( $size / $base-font-size );\r\n  @return $remSize * 1rem;\r\n}\r\n\r\n// 6. Aspect ratio\r\n// =============================================================================\r\n@mixin aspect-ratio($width, $height) {\r\n  position: relative;\r\n\r\n  &::before {\r\n    display: block;\r\n    content: \"\";\r\n    width: 100%;\r\n    padding-top: calc(($height / $width) * 100%);\r\n  }\r\n\r\n  >.content {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n  }\r\n}\r\n\r\n// 7. Row\r\n// =============================================================================\r\n@mixin row() {\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n}\r\n\r\n// 8. Custom media queries up\r\n// =============================================================================\r\n@mixin media-breakpoint-up($breakpoint) {\r\n  @if map-has-key($grid-breakpoints, $breakpoint) {\r\n    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);\r\n    @media (min-width: $breakpoint-value) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n  }\r\n}\r\n\r\n// 9. Custom media queries down\r\n@mixin media-breakpoint-down($breakpoint) {\r\n  @if map-has-key($grid-breakpoints, $breakpoint) {\r\n    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);\r\n    @media (max-width: ($breakpoint-value - 1)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n  }\r\n}\r\n\r\n// 10. Custom media queries between\r\n@mixin media-breakpoint-between($lower, $upper) {\r\n  @if map-has-key($grid-breakpoints, $lower) and map-has-key($grid-breakpoints, $upper) {\r\n    $lower-breakpoint: map-get($grid-breakpoints, $lower);\r\n    $upper-breakpoint: map-get($grid-breakpoints, $upper);\r\n    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @if (map-has-key($grid-breakpoints, $lower) == false) {\r\n      @warn 'Your lower breakpoint was invalid: #{$lower}.';\r\n    }\r\n    @if (map-has-key($grid-breakpoints, $upper) == false) {\r\n      @warn 'Your upper breakpoint was invalid: #{$upper}.';\r\n    }\r\n  }\r\n}\r\n\r\n// 11. Custom transitions\r\n// =============================================================================\r\n@mixin transition($property: all, $duration: $default-transition-duration, $timing: $default-transition-timing, $delay: 0s) {\r\n  transition-property: $property;\r\n  transition-duration: $duration;\r\n  transition-timing-function: $timing;\r\n  transition-delay: $delay;\r\n}\r\n\r\n// 12. Responsive\r\n// =============================================================================\r\n@function strip-unit($value) {\r\n  @return $value / ($value * 0 + 1);\r\n}\r\n\r\n// $min-font-size - min font size for responsive range\r\n// $max-font-size - max font size for responsive range\r\n// $min-vw - min width responsive range\r\n// $max-vw - max width responsive range\r\n\r\n@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {\r\n  $u1: unit($min-vw);\r\n  $u2: unit($max-vw);\r\n  $u3: unit($min-font-size);\r\n  $u4: unit($max-font-size);\r\n\r\n  @if $u1==$u2 and $u1==$u3 and $u1==$u4 {\r\n    & {\r\n\r\n      font-size: $min-font-size;\r\n\r\n      @media screen and (min-width: $min-vw) {\r\n        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));\r\n      }\r\n\r\n      @media screen and (min-width: $max-vw) {\r\n        font-size: $max-font-size;\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}