{"version":3,"file":"css/blocks/content_image_video.css","mappings":"AAkEA,MAEE,kBClEF,CACA,2BAEE,oBADA,gBAGF,CCgFI,0BDpFJ,2BAMI,qBADA,iBAIF,CACF,CCsFI,0BDvFF,yCAEI,QAGJ,CACF,CAAE,gDAEE,YADA,aAGJ,CC6EI,0BDjFF,gDAOI,YAFA,eADA,aAIA,SAFA,UAMJ,CACF,CAFE,2CAEE,yDADA,qDACA,gDACA,eAIJ,CAHI,kDACE,mDACA,UAKN,CAAE,+BAEE,YADA,cAGJ,CAEI,0DACE,iBAAN,CACM,8DACE,6CACR,CAEM,oEACE,iDAAR,CAGI,yDAGE,SAFA,kBACA,QAEA,qEADN,CAKE,oDACE,4EAHJ,CAKE,gDACE,iEAHJ,CAOI,kDACE,6CACA,gBADA,QAEA,eACA,eALN,CC4BI,0BD3BA,kDAMI,oDAHN,CACF,CAKI,mDACE,6CAGA,gBAHA,QACA,eACA,eAFN,CCiBI,0BDlBA,mDAMI,oDADN,CACF,CAOI,iDACE,gBACA,eACA,eALN,CAOI,kDACE,gBACA,eACA,eALN,CAWE,wCACE,oDATJ,CAYE,uCACE,oDAVJ,CAcI,+DAOE,0CAJA,eADA,gBAIA,mBADA,cAJA,aAGA,wBATN,CCbI,0BDkBA,+DASI,eAVN,CACF,CAcE,8BACE,aAZJ,CAeE,8BAEE,mBADA,YAZJ,CCzBI,0BDoCF,8BAKI,mBADA,cAVJ,CACF,CAcI,mCACE,eAZN,CClCI,0BD6CA,mCAGI,eACA,gBAVN,CACF,CAaE,yCACE,YAXJ,CAaE,kCACE,cAXJ,CC9CI,0BDwDF,kCAGI,gBATJ,CACF,CAeA,OASE,iCARA,aAGA,OAIA,cANA,eAGA,MAFA,WANF,CAcE,sBAJA,YADA,UAHF,CAQE,eACE,cAGA,iBAZJ,CAcI,sBAIE,SAHA,cACA,kBACA,QAEA,qEAZN,CAeI,sBACE,WAIA,eACA,gBAJA,kBACA,WACA,QAXN,CAiBM,wDAEE,WAEA,eADA,oBAfR,CAyBA,wBACE,aAtBF,CC7FI,0BDqHJ,6BAEI,UACA,QArBF,CACF,CAyBA,YACE,cACA,eACA,iBAGA,gBAEA,0FADA,gCAEA,0BALA,uCACA,8BAlBF,CAuBE,kBACE,mEArBJ,CAyBA,yBACE,WACE,eAtBF,CACF,C","sources":["webpack://custom-theme/./assets/scss/_variables.scss","webpack://custom-theme/./assets/scss/blocks/content_image_video.scss","webpack://custom-theme/./assets/scss/_mixins.scss"],"sourcesContent":["@import 'mixins';\r\n\r\n// =============================================================================\r\n// 1. Global\r\n// 2. Grid breakpoints\r\n// 3. Container max-width sizes\r\n// 4. Responsive Fonts\r\n// 5. Root variables\r\n// =============================================================================\r\n//\r\n// 1. Global\r\n// =============================================================================\r\n//\r\n// Choose whether to use bootstrap grid e.g. container, row, col etc.\r\n$use-bootstrap-grid: true;\r\n\r\n// If you want use rem to px function define this in pixels exclude 'px'\r\n$base-font-size: 18;\r\n\r\n// Default transitions variables\r\n$default-transition-duration: 0.15s;\r\n$default-transition-timing: ease-in-out;\r\n\r\n// Grid\r\n$grid-gutter-width: 2rem;\r\n\r\n// 2. Grid breakpoints\r\n// =============================================================================\r\n$grid-breakpoints: (\r\n  // Start\r\n  xxs: 0,\r\n  // Phone\r\n  xs: 375px,\r\n  // Phone\r\n  sm: 576px,\r\n  // Tablet\r\n  md: 1024px,\r\n  // Tablet\r\n  lg: 1024px,\r\n  // Desktop\r\n  xl: 1200px,\r\n  // Desktop\r\n  xxl: 1440px,\r\n  // Desktop\r\n  3xl: 1920px,\r\n  // Large desktop\r\n  4xl: 2560px\r\n);\r\n\r\n// 3. Container max-width sizes\r\n// =============================================================================\r\n$container-max-widths: (\r\n  md: 100%,\r\n  xl: 816px\r\n);\r\n\r\n// 4. Responsive Fonts\r\n// =============================================================================\r\n$min_width: map-get($grid-breakpoints, \"xs\"); // min width responsive range\r\n$max_width: map-get($grid-breakpoints, \"xl\"); // max width responsive range\r\n$min_font: 12px; // min font size for responsive range\r\n$max_font: 16px; // max font size for responsive range\r\n//\r\n//\r\n// 5. Root variables\r\n// =============================================================================\r\n:root {\r\n // Place variables here like --primary: #292929;\r\n  --bs-gutter-x: 24px;\r\n}\r\n\r\n","@import \"../variables\";\r\n@import \"../mixins\";\r\n\r\n.block.content-image-video {\r\n  padding-top: 64px;\r\n  padding-bottom: 64px;\r\n\r\n  @include media-breakpoint-up(md) {\r\n    padding-top: 128px;\r\n    padding-bottom: 128px;\r\n  }\r\n\r\n  #popup__modal{\r\n    @include media-breakpoint-down(md) {\r\n      top:30vh;\r\n    }\r\n}\r\n\r\n  .popup__popup-dialog {\r\n    max-width: 80%;\r\n    height: 70vh;\r\n    @include media-breakpoint-down(md) {\r\n      padding:24px;\r\n      max-width:100%;\r\n      width:100%;\r\n      height: auto;\r\n      top:30vh;\r\n    }\r\n  }\r\n  .popup__content{\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100%;\r\n    iframe{\r\n      flex-grow: 1;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n\r\n  img {\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  .content_image__media {\r\n    &--wrapper {\r\n      position: relative;\r\n      svg{\r\n        transition: all 0.4s;\r\n      }\r\n\r\n      &:hover svg{\r\n        transform: scale(1.2);\r\n      }\r\n    }\r\n    &--button {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n\r\n  .justify-content-between {\r\n    justify-content: space-between;\r\n  }\r\n  .align-items__center {\r\n    align-items: center;\r\n  }\r\n\r\n  .image-right {\r\n    .col-left {\r\n      order: 6;\r\n      max-width: 456px;\r\n      padding-left: 0;\r\n      padding-right: 0;\r\n      @include media-breakpoint-down(md) {\r\n        order: 0;\r\n      }\r\n    }\r\n    .col-right {\r\n      order: 0;\r\n      padding-left: 0;\r\n      padding-right: 0;\r\n      max-width: 637px;\r\n      @include media-breakpoint-down(md) {\r\n        order: 6;\r\n      }\r\n    }\r\n  }\r\n\r\n  .image-left {\r\n\r\n    .col-left {\r\n      max-width: 560px;\r\n      padding-left: 0;\r\n      padding-right: 0;\r\n    }\r\n    .col-right {\r\n      max-width: 456px;\r\n      padding-left: 0;\r\n      padding-right: 0;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  .order-first {\r\n    order: 0;\r\n  }\r\n\r\n  .order-last {\r\n    order: 6;\r\n  }\r\n\r\n  .content_image {\r\n    &__content--subheading {\r\n      margin: 8px 0;\r\n      font-weight: 700;\r\n      font-size: 12px;\r\n      text-transform: uppercase;\r\n      line-height: 1;\r\n      letter-spacing: 2px;\r\n      color: var(--wp--preset--color--text-gray);\r\n      @include media-breakpoint-down(md) {\r\n        margin-top: 32px;\r\n      }\r\n    }\r\n  }\r\n\r\n  h3 {\r\n    margin: 12px 0;\r\n  }\r\n\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 32px;\r\n    @include media-breakpoint-down(md) {\r\n      margin-top: 8px;\r\n      margin-bottom: 24px;\r\n    }\r\n  }\r\n  .text{\r\n    p{\r\n      margin-bottom: 0;\r\n      @include media-breakpoint-down(md) {\r\n        font-size: 16px;\r\n        line-height: 22px;\r\n      }\r\n    }\r\n  }\r\n  .cta__buttons{\r\n    margin-top: 0;\r\n  }\r\n  iframe{\r\n    max-width: 100%;\r\n    @include media-breakpoint-down(md) {\r\n      max-height: 250px;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n.modal {\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 999;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0,0,0,.85);\r\n\r\n  &-content {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n\r\n    > iframe {\r\n      margin: 0 auto;\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n\r\n    .close {\r\n      color: #fff;\r\n      position: absolute;\r\n      right: 50px;\r\n      top: 50px;\r\n      font-size: 50px;\r\n      font-weight: 100;\r\n\r\n\r\n\r\n      &:hover,\r\n      &:focus {\r\n        color: #fff;\r\n        text-decoration: none;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n.container-images-video{\r\n  margin: 0 auto;\r\n}\r\n.popup .popup__content-close{\r\n  @include media-breakpoint-down(md) {\r\n    right: 8px;\r\n    top: 11px;\r\n  }\r\n}\r\n\r\n\r\na.over_link {\r\n  display: block;\r\n  font-size: 17px;\r\n  line-height: 16px;\r\n  -webkit-transition: all .2s ease-in-out;\r\n  transition: all .2s ease-in-out;\r\n  margin-top: 24px;\r\n  text-decoration-thickness: 1.5px;\r\n  text-decoration-color: rgba(0,114,255,.4);\r\n  text-underline-offset: 5px;\r\n  &:hover{\r\n    text-decoration-color: rgba(0,114,255,1);\r\n\r\n  }\r\n}\r\n@media (max-width: 767px) {\r\n  .over_link {\r\n    margin-top: 10px;\r\n  }\r\n}","// =============================================================================\r\n// 1. Disable user selection\r\n// 2. Color\r\n// 3. Truncate single line text\r\n// 4. Truncate multi line text\r\n// 5. PX to REM\r\n// 6. Aspect ratio\r\n// 7. Row\r\n// 8. Custom media queries up\r\n// 9. Custom media queries down\r\n// 10. Custom media queries between\r\n// 11. Custom transitions\r\n// 12. Responsive\r\n// =============================================================================\r\n\r\n// 1. Disable user selection\r\n// =============================================================================\r\n@mixin nonselect {\r\n  user-select: none;\r\n}\r\n\r\n// 2. Color\r\n// =============================================================================\r\n@function color($name: 'text',$scheme: 'light', $opacity: 1) {\r\n  $color-schemes: map-get($colors, $scheme);\r\n  $color: map-get($color-schemes, $name);\r\n\r\n  @return rgba($color, $opacity);\r\n}\r\n\r\n// 3. Truncate single line text\r\n// =============================================================================\r\n@mixin truncateText($overflow: ellipsis) {\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: $overflow; // values are: clip, ellipsis, or a string\r\n}\r\n\r\n// 4. Truncate multi line text\r\n// =============================================================================\r\n@mixin truncateLines($lines) {\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: $lines;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n// 5. PX to REM\r\n// =============================================================================\r\n@function rem($size) {\r\n  $remSize: calc( $size / $base-font-size );\r\n  @return $remSize * 1rem;\r\n}\r\n\r\n// 6. Aspect ratio\r\n// =============================================================================\r\n@mixin aspect-ratio($width, $height) {\r\n  position: relative;\r\n\r\n  &::before {\r\n    display: block;\r\n    content: \"\";\r\n    width: 100%;\r\n    padding-top: calc(($height / $width) * 100%);\r\n  }\r\n\r\n  >.content {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n  }\r\n}\r\n\r\n// 7. Row\r\n// =============================================================================\r\n@mixin row() {\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n}\r\n\r\n// 8. Custom media queries up\r\n// =============================================================================\r\n@mixin media-breakpoint-up($breakpoint) {\r\n  @if map-has-key($grid-breakpoints, $breakpoint) {\r\n    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);\r\n    @media (min-width: $breakpoint-value) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n  }\r\n}\r\n\r\n// 9. Custom media queries down\r\n@mixin media-breakpoint-down($breakpoint) {\r\n  @if map-has-key($grid-breakpoints, $breakpoint) {\r\n    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);\r\n    @media (max-width: ($breakpoint-value - 1)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n  }\r\n}\r\n\r\n// 10. Custom media queries between\r\n@mixin media-breakpoint-between($lower, $upper) {\r\n  @if map-has-key($grid-breakpoints, $lower) and map-has-key($grid-breakpoints, $upper) {\r\n    $lower-breakpoint: map-get($grid-breakpoints, $lower);\r\n    $upper-breakpoint: map-get($grid-breakpoints, $upper);\r\n    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @if (map-has-key($grid-breakpoints, $lower) == false) {\r\n      @warn 'Your lower breakpoint was invalid: #{$lower}.';\r\n    }\r\n    @if (map-has-key($grid-breakpoints, $upper) == false) {\r\n      @warn 'Your upper breakpoint was invalid: #{$upper}.';\r\n    }\r\n  }\r\n}\r\n\r\n// 11. Custom transitions\r\n// =============================================================================\r\n@mixin transition($property: all, $duration: $default-transition-duration, $timing: $default-transition-timing, $delay: 0s) {\r\n  transition-property: $property;\r\n  transition-duration: $duration;\r\n  transition-timing-function: $timing;\r\n  transition-delay: $delay;\r\n}\r\n\r\n// 12. Responsive\r\n// =============================================================================\r\n@function strip-unit($value) {\r\n  @return $value / ($value * 0 + 1);\r\n}\r\n\r\n// $min-font-size - min font size for responsive range\r\n// $max-font-size - max font size for responsive range\r\n// $min-vw - min width responsive range\r\n// $max-vw - max width responsive range\r\n\r\n@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {\r\n  $u1: unit($min-vw);\r\n  $u2: unit($max-vw);\r\n  $u3: unit($min-font-size);\r\n  $u4: unit($max-font-size);\r\n\r\n  @if $u1==$u2 and $u1==$u3 and $u1==$u4 {\r\n    & {\r\n\r\n      font-size: $min-font-size;\r\n\r\n      @media screen and (min-width: $min-vw) {\r\n        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));\r\n      }\r\n\r\n      @media screen and (min-width: $max-vw) {\r\n        font-size: $max-font-size;\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}