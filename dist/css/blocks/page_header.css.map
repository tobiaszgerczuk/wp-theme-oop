{"version":3,"file":"css/blocks/page_header.css","mappings":"AAkEA,MAEE,kBClEF,CACA,aAEE,qDACA,kBAFA,iBAIF,CC+EI,0BDpFJ,aAMI,iBADA,gBAKF,CACF,CCqFI,0BDhGJ,aAUI,iBADA,gBAOF,CACF,CALE,yBAIE,YAHA,kBACA,MAGA,WAFA,SASJ,CANI,6BACE,YAEA,qCADA,UASN,CANI,gCAKE,8IAJA,WACA,cAEA,YAKA,OAFA,kBACA,MALA,UAaN,CAHE,wBAGE,6CACA,yDAFA,qDAEA,gDADA,uBAFA,SAQJ,CAJI,oCAEE,WADA,kBAON,CAJI,iCAKE,qBAFA,WADA,mBADA,aAGA,eAON,CAJI,8BAEE,gBADA,eAON,CALM,gCACE,UAOR,CAJI,8CACE,iBAEA,gBADA,YAON,CC4BI,0BDrCA,8CAKI,gBAQN,CACF,CAJE,qBAGE,iBAFA,cAKA,aAJA,WAEA,kBACA,OAOJ,CCGI,0BDfF,qBASI,UAOJ,CACF,CANI,4BAME,+CADA,kBAJA,WACA,cAEA,YAGA,iBACA,8DACA,4HANA,UAcN,CCbI,0BDSF,0BAEI,gBAMJ,CACF,CAFA,sCACE,YAKF,CAFA,iBACE,yEAKF,CAFA,+BACE,GACE,SAKF,CAHA,GACE,MAKF,CACF,CAXA,uBACE,GACE,SAKF,CAHA,GACE,MAKF,CACF,C","sources":["webpack://custom-theme/./assets/scss/_variables.scss","webpack://custom-theme/./assets/scss/blocks/page_header.scss","webpack://custom-theme/./assets/scss/_mixins.scss"],"sourcesContent":["@import 'mixins';\r\n\r\n// =============================================================================\r\n// 1. Global\r\n// 2. Grid breakpoints\r\n// 3. Container max-width sizes\r\n// 4. Responsive Fonts\r\n// 5. Root variables\r\n// =============================================================================\r\n//\r\n// 1. Global\r\n// =============================================================================\r\n//\r\n// Choose whether to use bootstrap grid e.g. container, row, col etc.\r\n$use-bootstrap-grid: true;\r\n\r\n// If you want use rem to px function define this in pixels exclude 'px'\r\n$base-font-size: 18;\r\n\r\n// Default transitions variables\r\n$default-transition-duration: 0.15s;\r\n$default-transition-timing: ease-in-out;\r\n\r\n// Grid\r\n$grid-gutter-width: 2rem;\r\n\r\n// 2. Grid breakpoints\r\n// =============================================================================\r\n$grid-breakpoints: (\r\n  // Start\r\n  xxs: 0,\r\n  // Phone\r\n  xs: 375px,\r\n  // Phone\r\n  sm: 576px,\r\n  // Tablet\r\n  md: 1024px,\r\n  // Tablet\r\n  lg: 1024px,\r\n  // Desktop\r\n  xl: 1200px,\r\n  // Desktop\r\n  xxl: 1440px,\r\n  // Desktop\r\n  3xl: 1920px,\r\n  // Large desktop\r\n  4xl: 2560px\r\n);\r\n\r\n// 3. Container max-width sizes\r\n// =============================================================================\r\n$container-max-widths: (\r\n  md: 100%,\r\n  xl: 816px\r\n);\r\n\r\n// 4. Responsive Fonts\r\n// =============================================================================\r\n$min_width: map-get($grid-breakpoints, \"xs\"); // min width responsive range\r\n$max_width: map-get($grid-breakpoints, \"xl\"); // max width responsive range\r\n$min_font: 12px; // min font size for responsive range\r\n$max_font: 16px; // max font size for responsive range\r\n//\r\n//\r\n// 5. Root variables\r\n// =============================================================================\r\n:root {\r\n // Place variables here like --primary: #292929;\r\n  --bs-gutter-x: 24px;\r\n}\r\n\r\n","@import \"../variables\";\r\n@import \"../mixins\";\r\n\r\n.page-header {\r\n  position: relative;\r\n  display: flex;\r\n  padding-top: 100px;\r\n  @include media-breakpoint-up(lg) {\r\n    padding-top: 96px;\r\n    min-height: 660px;\r\n  }\r\n  @include media-breakpoint-down(md) {\r\n    padding-top: 76px;\r\n    min-height: 500px;\r\n  }\r\n  &__background {\r\n    position: absolute;\r\n    top: 0;\r\n    z-index: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    img {\r\n      height: 100%;\r\n      width: 100%;\r\n      object-fit: cover;\r\n    }\r\n    &:before {\r\n      content: '';\r\n      display: block;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: linear-gradient(180deg, rgba(0, 0, 0, 0.4) 6.47%, rgba(0, 0, 0, 0) 19.3%),\r\n                  linear-gradient(89.99deg, rgba(0, 0, 0, 0.72) -4.74%, rgba(0, 0, 0, 0) 75.45%);\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n    }\r\n  }\r\n\r\n  &__container {\r\n    z-index: 1;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    .subheading {\r\n      margin-bottom: 14px;\r\n      color: white;\r\n    }\r\n    .heading {\r\n      margin-top: 0;\r\n      margin-bottom: 16px;\r\n      color: white;\r\n      max-width: 870px;\r\n      word-wrap: break-word;\r\n    }\r\n    .body {\r\n      min-height: 60px;\r\n      max-width: 625px;\r\n      > p {\r\n        color: white;\r\n      }\r\n    }\r\n    p.has-large-font-size{\r\n      line-height: 30px;\r\n      margin-top:0;\r\n      margin-bottom: 0;\r\n      @include media-breakpoint-down(md) {\r\n        line-height: 24px;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__circle {\r\n    display: block;\r\n    height: 55%;\r\n    aspect-ratio: 1 / 1;\r\n    position: absolute;\r\n    top: 15%;\r\n    display: none;\r\n\r\n    @include media-breakpoint-up(md) {\r\n      height: 65%;\r\n    }\r\n    &:before {\r\n      content: '';\r\n      display: block;\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: 50%;\r\n      background-color: var( --wp--preset--color--one );\r\n      margin-left: -50%;\r\n      transform: translateY(40px);\r\n      transition-timing-function: cubic-bezier(.645,.045,.355,1);\r\n    }\r\n  }\r\n\r\n  &.height-large {\r\n    @include media-breakpoint-up(lg) {\r\n      min-height: 840px;\r\n    }\r\n  }\r\n}\r\n\r\n.home .page-header__background:before{\r\n  display: none;\r\n}\r\n\r\n.animation_cirle {\r\n  animation: moveToRight 1s ease-in;\r\n\r\n}\r\n@keyframes moveToRight {\r\n  0% {\r\n    left: -30%;\r\n  }\r\n  100% {\r\n    left:0;\r\n  }\r\n}","// =============================================================================\r\n// 1. Disable user selection\r\n// 2. Color\r\n// 3. Truncate single line text\r\n// 4. Truncate multi line text\r\n// 5. PX to REM\r\n// 6. Aspect ratio\r\n// 7. Row\r\n// 8. Custom media queries up\r\n// 9. Custom media queries down\r\n// 10. Custom media queries between\r\n// 11. Custom transitions\r\n// 12. Responsive\r\n// =============================================================================\r\n\r\n// 1. Disable user selection\r\n// =============================================================================\r\n@mixin nonselect {\r\n  user-select: none;\r\n}\r\n\r\n// 2. Color\r\n// =============================================================================\r\n@function color($name: 'text',$scheme: 'light', $opacity: 1) {\r\n  $color-schemes: map-get($colors, $scheme);\r\n  $color: map-get($color-schemes, $name);\r\n\r\n  @return rgba($color, $opacity);\r\n}\r\n\r\n// 3. Truncate single line text\r\n// =============================================================================\r\n@mixin truncateText($overflow: ellipsis) {\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: $overflow; // values are: clip, ellipsis, or a string\r\n}\r\n\r\n// 4. Truncate multi line text\r\n// =============================================================================\r\n@mixin truncateLines($lines) {\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: $lines;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n// 5. PX to REM\r\n// =============================================================================\r\n@function rem($size) {\r\n  $remSize: calc( $size / $base-font-size );\r\n  @return $remSize * 1rem;\r\n}\r\n\r\n// 6. Aspect ratio\r\n// =============================================================================\r\n@mixin aspect-ratio($width, $height) {\r\n  position: relative;\r\n\r\n  &::before {\r\n    display: block;\r\n    content: \"\";\r\n    width: 100%;\r\n    padding-top: calc(($height / $width) * 100%);\r\n  }\r\n\r\n  >.content {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n  }\r\n}\r\n\r\n// 7. Row\r\n// =============================================================================\r\n@mixin row() {\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n}\r\n\r\n// 8. Custom media queries up\r\n// =============================================================================\r\n@mixin media-breakpoint-up($breakpoint) {\r\n  @if map-has-key($grid-breakpoints, $breakpoint) {\r\n    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);\r\n    @media (min-width: $breakpoint-value) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n  }\r\n}\r\n\r\n// 9. Custom media queries down\r\n@mixin media-breakpoint-down($breakpoint) {\r\n  @if map-has-key($grid-breakpoints, $breakpoint) {\r\n    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);\r\n    @media (max-width: ($breakpoint-value - 1)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n  }\r\n}\r\n\r\n// 10. Custom media queries between\r\n@mixin media-breakpoint-between($lower, $upper) {\r\n  @if map-has-key($grid-breakpoints, $lower) and map-has-key($grid-breakpoints, $upper) {\r\n    $lower-breakpoint: map-get($grid-breakpoints, $lower);\r\n    $upper-breakpoint: map-get($grid-breakpoints, $upper);\r\n    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @if (map-has-key($grid-breakpoints, $lower) == false) {\r\n      @warn 'Your lower breakpoint was invalid: #{$lower}.';\r\n    }\r\n    @if (map-has-key($grid-breakpoints, $upper) == false) {\r\n      @warn 'Your upper breakpoint was invalid: #{$upper}.';\r\n    }\r\n  }\r\n}\r\n\r\n// 11. Custom transitions\r\n// =============================================================================\r\n@mixin transition($property: all, $duration: $default-transition-duration, $timing: $default-transition-timing, $delay: 0s) {\r\n  transition-property: $property;\r\n  transition-duration: $duration;\r\n  transition-timing-function: $timing;\r\n  transition-delay: $delay;\r\n}\r\n\r\n// 12. Responsive\r\n// =============================================================================\r\n@function strip-unit($value) {\r\n  @return $value / ($value * 0 + 1);\r\n}\r\n\r\n// $min-font-size - min font size for responsive range\r\n// $max-font-size - max font size for responsive range\r\n// $min-vw - min width responsive range\r\n// $max-vw - max width responsive range\r\n\r\n@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {\r\n  $u1: unit($min-vw);\r\n  $u2: unit($max-vw);\r\n  $u3: unit($min-font-size);\r\n  $u4: unit($max-font-size);\r\n\r\n  @if $u1==$u2 and $u1==$u3 and $u1==$u4 {\r\n    & {\r\n\r\n      font-size: $min-font-size;\r\n\r\n      @media screen and (min-width: $min-vw) {\r\n        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));\r\n      }\r\n\r\n      @media screen and (min-width: $max-vw) {\r\n        font-size: $max-font-size;\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}