{"version":3,"file":"css/blocks/popup.css","mappings":"AAkEA,MAEE,kBClEF,CACA,YAEE,qBADA,iBAGF,CC4FI,0BDhGJ,YAKI,iBADA,aAKF,CACF,CAHE,2BACE,YAKJ,CAHE,iCACE,kBAKJ,CAHE,mCACE,YAKJ,CAFI,+BAEE,gBADA,YAKN,CAAE,eAEE,mBADA,YAGJ,CACE,iCAGE,eACA,iBAFA,mBADA,YAIJ,CAEE,qBAGE,sBAFA,gBAEJ,CC0DI,0BD7DF,qBAKI,cAEJ,CACF,CACE,uBAEE,eACA,iBAFA,kBAGJ,CCgDI,0BDpDF,uBAKI,eACA,gBAGJ,CAAF,yBAEI,WACA,QAGF,CALF,CAKE,oCACE,WAKA,eAFA,gBAIA,iBAHA,kBAFA,kBAIA,8CALA,UASJ,CAFI,0CACE,yBACA,oBAIN,CACI,gEACE,eACA,gBACN,CACM,kEAGE,eADA,gBAEA,iBAHA,oBAIR,CAEM,wEACE,0BACA,yBAAR,CAII,uDACE,gBAFN,CAII,+CACE,sBAMA,YAGA,gBADA,0CALA,eAIA,iBAHA,aAHA,kBACA,kBAGA,6CAEN,CCPI,0BDaE,sIAGI,eADA,gBAHR,CAAE,yHAQI,eACA,gBAHN,CAOE,8KAEE,WAJJ,CAVF,CAkBI,8GACE,gDACA,kBACA,6CALN,CAOM,0IACE,yBAMA,0CACA,eACA,gBAEA,QANA,cAHA,iBACA,kBACA,kBAEA,SAIA,SAJR,CAQM,0HACE,uBAKA,YAJA,0CACA,eAEA,gBADA,gBAJR,CASM,gIACE,uBACA,YAMA,0CAFA,uCAHA,eACA,gBAGA,aAFA,gBAJR,CAWI,iDACE,iBATN,CAYI,0DACE,YAVN,CAaI,uDAOE,0CAJA,eAMA,gBAEA,UALA,iBAFA,aAHA,kBACA,SAGA,2BAGA,mBAEA,SAVN,CC/EI,0BD+EA,uDAaI,eACA,gBATN,CACF,CAYI,4DACE,+CAKA,YAJA,gBACA,WAOA,eAGA,oBATA,eACA,kBAGA,gBACA,iBAGA,eADA,kBAJA,UAJN,CAWM,kEACE,uDACA,kDATR,CCxGI,0BDiGA,4DAoBI,eADD,gBAPL,CACF,CAUI,uDACE,mBARN,CAaE,2EACE,mBACA,iBAXJ,CAcA,iBACE,+BAXF,CAkBA,kDACE,kCAXF,CAmBA,oDACE,YAZF,CAeA,WACE,4BACA,iBACA,sBACA,eACA,oBACA,iBACA,OAZF,CAcE,uCATF,WAUI,iBAXF,CACF,CAaE,2CAbF,WAcI,iBAVF,CACF,CAWE,gCAEE,UADA,kBAEA,OATJ,CAYA,WACE,4BACA,iBACA,sBACA,eACA,oBACA,iBACA,OATF,CAWE,uCATF,WAUI,iBARF,CACF,CAUE,2CAbF,WAcI,iBAPF,CACF,CAQE,gCAEE,UADA,kBAEA,OANJ,CC3LI,0BDqMJ,cAGI,OADA,KANF,CAYA,sCAEI,eACA,gBARJ,CANF,CAmBA,cACE,qBATF,CAaA,cAEE,gBADA,eATF,C","sources":["webpack://custom-theme/./assets/scss/_variables.scss","webpack://custom-theme/./assets/scss/blocks/popup.scss","webpack://custom-theme/./assets/scss/_mixins.scss"],"sourcesContent":["@import 'mixins';\r\n\r\n// =============================================================================\r\n// 1. Global\r\n// 2. Grid breakpoints\r\n// 3. Container max-width sizes\r\n// 4. Responsive Fonts\r\n// 5. Root variables\r\n// =============================================================================\r\n//\r\n// 1. Global\r\n// =============================================================================\r\n//\r\n// Choose whether to use bootstrap grid e.g. container, row, col etc.\r\n$use-bootstrap-grid: true;\r\n\r\n// If you want use rem to px function define this in pixels exclude 'px'\r\n$base-font-size: 18;\r\n\r\n// Default transitions variables\r\n$default-transition-duration: 0.15s;\r\n$default-transition-timing: ease-in-out;\r\n\r\n// Grid\r\n$grid-gutter-width: 2rem;\r\n\r\n// 2. Grid breakpoints\r\n// =============================================================================\r\n$grid-breakpoints: (\r\n  // Start\r\n  xxs: 0,\r\n  // Phone\r\n  xs: 375px,\r\n  // Phone\r\n  sm: 576px,\r\n  // Tablet\r\n  md: 1024px,\r\n  // Tablet\r\n  lg: 1024px,\r\n  // Desktop\r\n  xl: 1200px,\r\n  // Desktop\r\n  xxl: 1440px,\r\n  // Desktop\r\n  3xl: 1920px,\r\n  // Large desktop\r\n  4xl: 2560px\r\n);\r\n\r\n// 3. Container max-width sizes\r\n// =============================================================================\r\n$container-max-widths: (\r\n  md: 100%,\r\n  xl: 816px\r\n);\r\n\r\n// 4. Responsive Fonts\r\n// =============================================================================\r\n$min_width: map-get($grid-breakpoints, \"xs\"); // min width responsive range\r\n$max_width: map-get($grid-breakpoints, \"xl\"); // max width responsive range\r\n$min_font: 12px; // min font size for responsive range\r\n$max_font: 16px; // max font size for responsive range\r\n//\r\n//\r\n// 5. Root variables\r\n// =============================================================================\r\n:root {\r\n // Place variables here like --primary: #292929;\r\n  --bs-gutter-x: 24px;\r\n}\r\n\r\n","@import \"../variables\";\r\n@import \"../mixins\";\r\n\r\n.popup_form {\r\n  padding-top: 128px;\r\n  padding-bottom: 128px;\r\n  @include media-breakpoint-down(md) {\r\n    padding-top:0;\r\n    padding-bottom: 0;\r\n  }\r\n  .gform_heading {\r\n    display: none;\r\n  }\r\n  .popup__popup-dialog{\r\n    background:#E8E8E8;\r\n  }\r\n  img.gform_ajax_spinner {\r\n    display: none;\r\n  }\r\n  .acceptance_form {\r\n    p {\r\n      margin-top: 0;\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  p.popup_under_button {\r\n    margin-top: 0;\r\n    margin-bottom: 48px;\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n  }\r\n\r\n  textarea {\r\n    max-height: 146px;\r\n    border: none;\r\n    border: 1px solid #fff;\r\n    @include media-breakpoint-down(md) {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n\r\n  &_subheading {\r\n    margin-bottom: 32px;\r\n    font-size: 18px;\r\n    line-height: 26px;\r\n    @include media-breakpoint-down(md) {\r\n      font-size: 16px;\r\n      line-height: 22px;\r\n    }\r\n  }\r\n#close_popup{\r\n  @include media-breakpoint-down(md) {\r\n    right: 24px;\r\n    top: 24px;\r\n  }\r\n}\r\n  a.wp-block-button__link {\r\n    color: #fff;\r\n    width: 100%;\r\n    text-align: center;\r\n    font-weight: 600;\r\n    margin-bottom: 8px;\r\n    font-size: 17px;\r\n    transition: all 0.4s;\r\n    line-height: 16px;\r\n    &:hover{\r\n      background-color: #0054bc;\r\n      border-color: #0054bc;\r\n    }\r\n  }\r\n\r\n  .gform_wrapper.gravity-theme {\r\n    .gfield_checkbox label {\r\n      font-size: 14px;\r\n      line-height: 20px;\r\n\r\n      a {\r\n        text-decoration: none;\r\n        font-weight: 400;\r\n        font-size: 14px;\r\n        line-height: 20px;\r\n      }\r\n\r\n      a:hover {\r\n        text-decoration: underline;\r\n        text-underline-offset: 2px;\r\n      }\r\n\r\n    }\r\n    .gform_fields{\r\n      grid-row-gap: 8px;\r\n    }\r\n    input {\r\n      background-color: white;\r\n      padding: 11px 16px;\r\n      position: relative;\r\n      font-size: 18px;\r\n      outline: none;\r\n      transition: all 0.4s;\r\n      border: none;\r\n      line-height: 26px;\r\n      color: var(--wp--preset--color--text-gray);\r\n      border-radius: 0;\r\n    }\r\n\r\n    input:not([type=radio]):not([type=checkbox]):not([type=image]):not([type=file]) {\r\n      &[type=submit]{\r\n        @include media-breakpoint-down(md) {\r\n          line-height: 16px;\r\n          font-size: 17px;\r\n        }\r\n      }\r\n      @include media-breakpoint-down(md) {\r\n        font-size: 18px;\r\n        line-height: 26px;\r\n      }\r\n    }\r\n\r\n    input[type=text],input[type=email],input[type=tel]{\r\n      @include media-breakpoint-down(md) {\r\n      height: 48px;\r\n      }\r\n  }\r\n\r\n    .active_input, .gfield_error  {\r\n      border: 1px solid var(--wp--preset--color--four);\r\n      position: relative;\r\n      transition: all 0.4s;\r\n\r\n      .gfield_label {\r\n        background-color: #E8E8E8;\r\n        padding-left: 5px;\r\n        padding-right: 5px;\r\n        position: absolute;\r\n        line-height: 1;\r\n        top: -6px;\r\n        color: var(--wp--preset--color--text-gray);\r\n        font-size: 14px;\r\n        font-weight: 400;\r\n        z-index: 1;\r\n        left: 6%;\r\n      }\r\n\r\n      input {\r\n        background: transparent;\r\n        color: var(--wp--preset--color--text-gray);\r\n        font-size: 18px;\r\n        line-height: 26px;\r\n        font-weight: 400;\r\n        border: none;\r\n      }\r\n\r\n      textarea {\r\n        background: transparent;\r\n        border: none;\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        padding-top: 15px;\r\n        font-family: var(--bs-body-font-family);\r\n        outline: none;\r\n        color: var(--wp--preset--color--text-gray);\r\n      }\r\n    }\r\n\r\n    .gfield {\r\n      position: relative;\r\n    }\r\n\r\n    .gfield_required {\r\n      display: none;\r\n    }\r\n\r\n    .gfield_label {\r\n      position: absolute;\r\n      top: 10px;\r\n      font-size: 18px;\r\n      outline: none;\r\n      transition: all 0.4s;\r\n      line-height: 26px;\r\n      color: var(--wp--preset--color--text-gray);\r\n      transition: all 0.4s;\r\n      font-weight: 400;\r\n      z-index: 1;\r\n      left: 15px;\r\n      @include media-breakpoint-down(md) {\r\n        font-size: 18px;\r\n        line-height: 26px;\r\n      }\r\n    }\r\n\r\n    input[type=submit] {\r\n      background-color: var(--wp--preset--color--one);\r\n      border-radius: 0px;\r\n      color: #FFFFFF;\r\n      font-size: 17px;\r\n      font-style: normal;\r\n      border: none;\r\n      width: 100%;\r\n      font-weight: 600;\r\n      line-height: 16px;\r\n      cursor: pointer;\r\n      padding: 20px 32px;\r\n      margin-top: 8px;\r\n      font-family: inherit;\r\n      &:hover{\r\n        background-color: var(--wp--preset--color--one-hovered);\r\n        border-color: var(--wp--preset--color--one-hovered);\r\n      }\r\n      @include media-breakpoint-down(md) {\r\n       line-height: 16px;\r\n        font-size: 17px;\r\n      }\r\n    }\r\n    #field_submit{\r\n      grid-column: span 12;\r\n    }\r\n\r\n  }\r\n\r\n  .gform_wrapper.gravity-theme input[type=submit].clicked_button {\r\n    background: #AAB0C6;\r\n    position: relative;\r\n  }\r\n}\r\n.validation_pass {\r\n  border: 1px solid #FFFFFF !important;\r\n}\r\n\r\n.gfield_error {\r\n  border: 1px solid #E24545 !important;\r\n}\r\n\r\ngfield.gfield_error.validation_pass {\r\n  border: 1px solid #E24545 !important;\r\n}\r\n\r\n\r\n.gform_validation_errors {\r\n  display: none;\r\n}\r\n\r\n.gfield_validation_message {\r\n  display: none;\r\n}\r\n\r\n#field_1_7{\r\n  -webkit-box-ordinal-group: 2;\r\n  -ms-flex-order: 1;\r\n  border: none!important;\r\n  font-size: 14px;\r\n  grid-column: span 12;\r\n  line-height: 20px;\r\n  order: 1;\r\n\r\n  @supports (-webkit-touch-callout: none) {\r\n    padding-left: 35px;\r\n  }\r\n\r\n  @supports not (-webkit-touch-callout: none) {\r\n    padding-left: 20px;\r\n  }\r\n  .gfield-choice-input {\r\n    position: absolute;\r\n    left: -2px;\r\n    top: 3px;\r\n  }\r\n}\r\n#field_3_7{\r\n  -webkit-box-ordinal-group: 2;\r\n  -ms-flex-order: 1;\r\n  border: none!important;\r\n  font-size: 14px;\r\n  grid-column: span 12;\r\n  line-height: 20px;\r\n  order: 1;\r\n\r\n  @supports (-webkit-touch-callout: none) {\r\n    padding-left: 35px;\r\n  }\r\n\r\n  @supports not (-webkit-touch-callout: none) {\r\n    padding-left: 20px;\r\n  }\r\n  .gfield-choice-input {\r\n    position: absolute;\r\n    left: -2px;\r\n    top: 3px;\r\n  }\r\n}\r\n\r\n#popup__modal{\r\n  @include media-breakpoint-down(md) {\r\n    top: 0;\r\n    left:0;\r\n  }\r\n}\r\n\r\n.single-course{\r\n  .popup_form_subheading{\r\n    @include media-breakpoint-down(md) {\r\n      font-size: 16px;\r\n      line-height: 22px;\r\n    }\r\n\r\n  }\r\n}\r\n#field_submit{\r\n  border:none !important;\r\n}\r\n\r\n\r\n#popup__modal{\r\n  overflow-y:auto;\r\n  max-height: 100%;\r\n}\r\n\r\n\r\n","// =============================================================================\r\n// 1. Disable user selection\r\n// 2. Color\r\n// 3. Truncate single line text\r\n// 4. Truncate multi line text\r\n// 5. PX to REM\r\n// 6. Aspect ratio\r\n// 7. Row\r\n// 8. Custom media queries up\r\n// 9. Custom media queries down\r\n// 10. Custom media queries between\r\n// 11. Custom transitions\r\n// 12. Responsive\r\n// =============================================================================\r\n\r\n// 1. Disable user selection\r\n// =============================================================================\r\n@mixin nonselect {\r\n  user-select: none;\r\n}\r\n\r\n// 2. Color\r\n// =============================================================================\r\n@function color($name: 'text',$scheme: 'light', $opacity: 1) {\r\n  $color-schemes: map-get($colors, $scheme);\r\n  $color: map-get($color-schemes, $name);\r\n\r\n  @return rgba($color, $opacity);\r\n}\r\n\r\n// 3. Truncate single line text\r\n// =============================================================================\r\n@mixin truncateText($overflow: ellipsis) {\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: $overflow; // values are: clip, ellipsis, or a string\r\n}\r\n\r\n// 4. Truncate multi line text\r\n// =============================================================================\r\n@mixin truncateLines($lines) {\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: $lines;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n// 5. PX to REM\r\n// =============================================================================\r\n@function rem($size) {\r\n  $remSize: calc( $size / $base-font-size );\r\n  @return $remSize * 1rem;\r\n}\r\n\r\n// 6. Aspect ratio\r\n// =============================================================================\r\n@mixin aspect-ratio($width, $height) {\r\n  position: relative;\r\n\r\n  &::before {\r\n    display: block;\r\n    content: \"\";\r\n    width: 100%;\r\n    padding-top: calc(($height / $width) * 100%);\r\n  }\r\n\r\n  >.content {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n  }\r\n}\r\n\r\n// 7. Row\r\n// =============================================================================\r\n@mixin row() {\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n}\r\n\r\n// 8. Custom media queries up\r\n// =============================================================================\r\n@mixin media-breakpoint-up($breakpoint) {\r\n  @if map-has-key($grid-breakpoints, $breakpoint) {\r\n    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);\r\n    @media (min-width: $breakpoint-value) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n  }\r\n}\r\n\r\n// 9. Custom media queries down\r\n@mixin media-breakpoint-down($breakpoint) {\r\n  @if map-has-key($grid-breakpoints, $breakpoint) {\r\n    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);\r\n    @media (max-width: ($breakpoint-value - 1)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n  }\r\n}\r\n\r\n// 10. Custom media queries between\r\n@mixin media-breakpoint-between($lower, $upper) {\r\n  @if map-has-key($grid-breakpoints, $lower) and map-has-key($grid-breakpoints, $upper) {\r\n    $lower-breakpoint: map-get($grid-breakpoints, $lower);\r\n    $upper-breakpoint: map-get($grid-breakpoints, $upper);\r\n    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @if (map-has-key($grid-breakpoints, $lower) == false) {\r\n      @warn 'Your lower breakpoint was invalid: #{$lower}.';\r\n    }\r\n    @if (map-has-key($grid-breakpoints, $upper) == false) {\r\n      @warn 'Your upper breakpoint was invalid: #{$upper}.';\r\n    }\r\n  }\r\n}\r\n\r\n// 11. Custom transitions\r\n// =============================================================================\r\n@mixin transition($property: all, $duration: $default-transition-duration, $timing: $default-transition-timing, $delay: 0s) {\r\n  transition-property: $property;\r\n  transition-duration: $duration;\r\n  transition-timing-function: $timing;\r\n  transition-delay: $delay;\r\n}\r\n\r\n// 12. Responsive\r\n// =============================================================================\r\n@function strip-unit($value) {\r\n  @return $value / ($value * 0 + 1);\r\n}\r\n\r\n// $min-font-size - min font size for responsive range\r\n// $max-font-size - max font size for responsive range\r\n// $min-vw - min width responsive range\r\n// $max-vw - max width responsive range\r\n\r\n@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {\r\n  $u1: unit($min-vw);\r\n  $u2: unit($max-vw);\r\n  $u3: unit($min-font-size);\r\n  $u4: unit($max-font-size);\r\n\r\n  @if $u1==$u2 and $u1==$u3 and $u1==$u4 {\r\n    & {\r\n\r\n      font-size: $min-font-size;\r\n\r\n      @media screen and (min-width: $min-vw) {\r\n        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));\r\n      }\r\n\r\n      @media screen and (min-width: $max-vw) {\r\n        font-size: $max-font-size;\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}