{"version":3,"file":"/js/blocks/submenu.js","mappings":"YAAA,IAAIA,EAAWC,SAASC,cAAc,kBAClCC,EAAWF,SAASC,cAAc,gBACtC,GAAKF,EAAU,CAGX,IAAII,EAAiBJ,EAAQE,cAAc,kBACtCE,IACDA,EAAeC,QAAU,SAAEC,GACvBA,EAAMC,cAAcC,cAAcC,UAAUC,OAAO,aAI3D,IAAIC,EAAYX,EAAQY,uBAAuB,cAC3CC,EAAeb,EAAQc,aAAe,GAC1C,GAAKH,EAAY,CAGbI,MAAMC,KAAML,GAAYM,SAAS,SAAAC,GAC7BA,EAAKb,QAAU,SAAEC,GACbA,EAAMa,iBACN,IAAIC,EAASd,EAAMe,OAAOC,aAAc,QAExC,GADarB,SAASsB,eAAgBH,EAAOI,UAAW,IAC1C,CACV,IAAIC,EAAkBxB,SAASsB,eAAgBH,EAAOI,UAAW,IAAME,wBAAwBC,IAC3FC,EAAiBH,EAAkBI,OAAOC,YAAc,IACvDD,OAAOE,WAAa,MACrBH,EAAiBH,EAAkBI,OAAOC,YAAc,IAE5DD,OAAOG,SAAS,CACZL,IAAKC,EACLK,SAAU,WAEdC,QAAQC,aAAc,KAAM,KAAMlC,SAASmC,SAASC,SAAWjB,GAC/DF,EAAKV,cAAcC,UAAU6B,OAAQ,WACrCpB,EAAKT,UAAU8B,IAAK,kBAMhC,IAAIC,EAAWzB,MAAMC,KAAML,GAAY8B,KAAK,SAAAvB,GAAI,OAAIA,EAAKI,aAAc,QAASE,UAAW,MAC3FgB,EAAWA,EAASE,QAAO,SAAAC,GACvB,MAAmB,KAAZA,KAEX,IAAIC,EAAgB,EACpBC,SAAW,WACP,GAAKL,EAAW,CAGZ,IAAIM,EAAUjB,OAAOC,YACrBU,EAASvB,SAAQ,SAAA8B,GACb,IAAIC,EAAiB/C,SAASsB,eAAewB,GACzCE,EAAgBD,EAAelC,aAC/BoC,EAAcF,EAAetB,wBAAwBC,IAAME,OAAOC,YAAejB,EAChFiC,EAAUI,GAAcJ,GAAWI,EAAaD,EACjDjD,EAAQE,cAAc,oBAAsB6C,EAAU,KAAKtC,UAAU8B,IAAI,aAEzEvC,EAAQE,cAAc,oBAAsB6C,EAAU,KAAKtC,UAAU6B,OAAO,gBAOxF,IAAIa,EAAYtB,OAAOC,aAAe7B,SAASmD,gBAAgBD,UAC1DA,EAAYP,GACb5C,EAAQqD,MAAM1B,IAAM,MACf3B,EAAQ0B,wBAAwBC,KAAOxB,EAASW,eACjDX,EAASkD,MAAM1B,IAAM,KAAQxB,EAASW,aAAed,EAAQ0B,wBAAwBC,KAAQ,QAGjGxB,EAASkD,MAAM1B,IAAM,MAChB3B,EAAQ0B,wBAAwBC,IAAMxB,EAASW,eAChDd,EAAQqD,MAAM1B,IAAMxB,EAASW,aAAe,OAGpD8B,EAAgBO,GAAa,EAAI,EAAIA,GAI7C,IAAIG,EAAetD,EAAQE,cAAc,eACpCoD,IACDC,EAAoBD,EAAaxC,cACjCe,OAAO2B,SAAW,WACdD,EAAoBD,KAMhC,SAASC,EAAoBE,GACzB,IAAIC,EAAczD,SAASC,cAAc,iBACrCyD,EAAc9B,OAAOE,WACzB,GAAK2B,GAAYC,GAAe,IAAQ,CACpC,IAAIC,EAAgB/B,OAAOgC,iBAAiBH,EAAQ,MAAMI,iBAAiB,kBAEvEJ,EAAOL,MAAMO,cADZA,EAC8BG,SAAUH,EAAcpC,UAAW,EAAGoC,EAAcI,OAAS,IAAQP,EAAW,KAElFA,EAAS,O","sources":["webpack://custom-theme/./assets/js/blocks/submenu.js"],"sourcesContent":["let submenu  = document.querySelector('.block.submenu');\r\nlet mainMenu = document.querySelector('.site-header');\r\nif ( submenu ) {\r\n\r\n    // Mobile menu\r\n    let submenuTrigger = submenu.querySelector('.menu__trigger');\r\n    if ( submenuTrigger ) {\r\n        submenuTrigger.onclick = ( event ) => {\r\n            event.currentTarget.parentElement.classList.toggle('is-open');\r\n        }\r\n    }\r\n\r\n    let menuItems = submenu.getElementsByClassName('menu__item');\r\n    let headerOffset = submenu.offsetHeight + 10;\r\n    if ( menuItems ) {\r\n\r\n        // Scroll to section\r\n        Array.from( menuItems ).forEach( item => {\r\n            item.onclick = ( event ) => {\r\n                event.preventDefault();\r\n                let anchor = event.target.getAttribute( 'href' );\r\n                let target = document.getElementById( anchor.substring( 1 ) );\r\n                if ( target ) {\r\n                    let elementPosition = document.getElementById( anchor.substring( 1 ) ).getBoundingClientRect().top;\r\n                    let offsetPosition = elementPosition + window.pageYOffset - 265;\r\n                    if ( window.innerWidth > 992 ) {\r\n                        offsetPosition = elementPosition + window.pageYOffset - 90;\r\n                    }\r\n                    window.scrollTo({\r\n                        top: offsetPosition,\r\n                        behavior: \"smooth\"\r\n                    });\r\n                    history.replaceState( null, null, document.location.pathname + anchor );\r\n                    item.parentElement.classList.remove( 'is-open' );\r\n                    item.classList.add( 'is-active' );\r\n                }\r\n            }\r\n        } );\r\n\r\n        // Get sections from menu anchors\r\n        let sections = Array.from( menuItems ).map( item => item.getAttribute( 'href' ).substring( 1 ) );\r\n        sections = sections.filter(element => {\r\n            return element !== '';\r\n        });\r\n        let lastScrollTop = 0;\r\n        onscroll = () => {\r\n            if ( sections ) {\r\n\r\n                // Highlight current section\r\n                let scrollY = window.pageYOffset;\r\n                sections.forEach(section => {\r\n                    let currentSection = document.getElementById(section);\r\n                    let sectionHeight = currentSection.offsetHeight;\r\n                    let sectionTop = (currentSection.getBoundingClientRect().top + window.pageYOffset) - headerOffset;\r\n                    if ( scrollY > sectionTop && scrollY <= sectionTop + sectionHeight ) {\r\n                        submenu.querySelector('nav.menu a[href*=' + section + ']').classList.add('is-active');\r\n                    } else {\r\n                        submenu.querySelector('nav.menu a[href*=' + section + ']').classList.remove('is-active');\r\n                    }\r\n                } );\r\n\r\n            }\r\n\r\n            // Show/hide main menu\r\n            let scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n            if ( scrollTop > lastScrollTop ){\r\n                submenu.style.top = '0px';\r\n                if ( submenu.getBoundingClientRect().top <= mainMenu.offsetHeight ) {\r\n                    mainMenu.style.top = '-' + ( mainMenu.offsetHeight - submenu.getBoundingClientRect().top ) + 'px';\r\n                }\r\n            } else {\r\n                mainMenu.style.top = '0px';\r\n                if ( submenu.getBoundingClientRect().top < mainMenu.offsetHeight ) {\r\n                    submenu.style.top = mainMenu.offsetHeight + 'px';\r\n                }\r\n            }\r\n            lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;\r\n        }\r\n    }\r\n\r\n    let bottomButton = submenu.querySelector('div.buttons');\r\n    if ( bottomButton ) {\r\n        addPaddingToFooter( bottomButton.offsetHeight );\r\n        window.onresize = () => {\r\n            addPaddingToFooter( bottomButton )\r\n        };\r\n    }\r\n}\r\n\r\n// Footer bottom padding\r\nfunction addPaddingToFooter( pixels ) {\r\n    let footer      = document.querySelector('footer.footer');\r\n    let windowWidth = window.innerWidth;\r\n    if ( footer && ( windowWidth <= 992 ) ) {\r\n        let paddingBottom = window.getComputedStyle(footer, null).getPropertyValue('padding-bottom');\r\n        if ( paddingBottom ) {\r\n            footer.style.paddingBottom = ( parseInt( paddingBottom.substring( 0, paddingBottom.length - 2 ) ) + pixels ) + 'px';\r\n        } else {\r\n            footer.style.paddingBottom = pixels + 'px';\r\n        }\r\n    }\r\n}\r\n"],"names":["submenu","document","querySelector","mainMenu","submenuTrigger","onclick","event","currentTarget","parentElement","classList","toggle","menuItems","getElementsByClassName","headerOffset","offsetHeight","Array","from","forEach","item","preventDefault","anchor","target","getAttribute","getElementById","substring","elementPosition","getBoundingClientRect","top","offsetPosition","window","pageYOffset","innerWidth","scrollTo","behavior","history","replaceState","location","pathname","remove","add","sections","map","filter","element","lastScrollTop","onscroll","scrollY","section","currentSection","sectionHeight","sectionTop","scrollTop","documentElement","style","bottomButton","addPaddingToFooter","onresize","pixels","footer","windowWidth","paddingBottom","getComputedStyle","getPropertyValue","parseInt","length"],"sourceRoot":""}